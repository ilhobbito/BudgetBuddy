@page "/Categories"
@using BudgetBuddy.Lib.DAL
@using BudgetBuddy.Models
@using BudgetBuddy.Services
@inject BudgetService BudgetService
@inject CategoriesManager CategoryService

<div class="container mt-5">
    <h1 class="mb-4">Kategorier</h1>
    <p class="text-muted">Här kan du lägga till och hålla koll på dina kategorier.</p>

    <div class="card mb-4">
        <div class="card-header bg-primary text-white">
            <h4>Lägg till ny kategori</h4>
        </div>
        <div class="card-body">
            <EditForm Model="@_newCategory" OnValidSubmit="AddCategory" FormName="BudgetForm">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label for="name" class="form-label">Kategori</label>
                    <InputText id="name" class="form-control" @bind-Value="_newCategory.Name" />
                </div>
                <div class="mb-3">
                    <label for="amount" class="form-label">Budgetgräns</label>
                    <InputNumber id="budgetlimit" class="form-control" @bind-Value="_newCategory.BudgetLimit" />
                </div>

                <button type="submit" class="btn btn-primary">Lägg till</button>
            </EditForm>
        </div>
    </div>

    <div class="card">
        <div class="card-header bg-success text-white">
            <h4>Budgetposter</h4>
        </div>
        <div class="card-body">
            <table class="table table-striped">
                <thead>
                <tr>
                    <th>Kategori</th>
                    <th>Budgetgräns</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in _categoryList)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.BudgetLimit kr</td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>


@code {
    // private readonly CategoriesManager _categoriesManager;
    //
    //
    // public Categories(CategoriesManager categoriesManager)
    // {
    //     _categoriesManager = categoriesManager;
    // }
    private Category _newCategory = new();
    private List<Category> _categoryList = new List<Category>();


    protected override async Task OnInitializedAsync()
    {
        _categoryList = await CategoryService.GetCategoriesAsync();
    }
    
    private async Task AddCategory()
    {
        await CategoryService.CreateCategoryAsync(_newCategory);
        _categoryList = await CategoryService.GetCategoriesAsync();
       
       _newCategory = new Category
       {
           Name = string.Empty,
           BudgetLimit = 0
       };
    }
}
